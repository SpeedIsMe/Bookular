{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { BookularService } from '../../services/bookular.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nexport class CreateBookComponent {\n  constructor(formBuilder, http) {\n    this.formBuilder = formBuilder;\n    this.http = http;\n    /*  @Output() onSubmit: EventEmitter<IBook> = new EventEmitter();*/\n    this.onSubmit = new EventEmitter();\n    this.bookservice = new BookularService(this.http);\n    this.form = this.formBuilder.group({\n      username: [''],\n      password: ['']\n    });\n  }\n  addBook() {\n    console.log(\"sdkfjsadfkjasndlfkasmndlfkasmdlf\");\n    var formObject = this.form.value;\n    /*   const newBook: IBook = {\r\n         id: 0,\r\n         title: (string)formObject.title,\r\n         description: \"Een nieuw boek om aan de lijst toe te voegen\",\r\n         author: {\r\n           id: 567,\r\n           firstName: 'Kees',\r\n           lastName: 'Test',\r\n           bio: 'Kees Test is een bijzondere auteur',\r\n           books: null\r\n         },\r\n         authorId: 567\r\n       };*/\n    this.onSubmit.emit(formObject);\n  }\n}\nCreateBookComponent.ɵfac = function CreateBookComponent_Factory(t) {\n  return new (t || CreateBookComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient));\n};\nCreateBookComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateBookComponent,\n  selectors: [[\"app-create-book\"]],\n  outputs: {\n    onSubmit: \"onSubmit\"\n  },\n  decls: 13,\n  vars: 1,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"id\", \"name\", \"type\", \"text\", \"formControlName\", \"name\"], [\"for\", \"address\"], [\"id\", \"address\", \"type\", \"text\", \"formControlName\", \"address\"], [\"type\", \"submit\", 1, \"button\"]],\n  template: function CreateBookComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"create-book works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateBookComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.addBook();\n      });\n      i0.ɵɵelementStart(3, \"div\")(4, \"label\", 1);\n      i0.ɵɵtext(5, \" Name \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\")(8, \"label\", 3);\n      i0.ɵɵtext(9, \" Address \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 5);\n      i0.ɵɵtext(12, \"Purchase\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAAuB,eAAe;AACtE,SAAuCC,SAAS,QAAQ,gBAAgB;AACxE,SAASC,eAAe,QAAQ,iCAAiC;;;;AAqBjE,OAAM,MAAOC,mBAAmB;EAe9BC,YACUC,WAAwB,EACxBC,IAAgB;IADhB,gBAAW,GAAXD,WAAW;IACX,SAAI,GAAJC,IAAI;IAhBd;IAGU,aAAQ,GAAG,IAAIN,YAAY,EAAS;IAU9C,gBAAW,GAAG,IAAIE,eAAe,CAAC,IAAI,CAACI,IAAI,CAAC;IAM1C,IAAI,CAACC,IAAI,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACjCC,QAAQ,EAAE,CAAC,EAAE,CAAC;MACdC,QAAQ,EAAE,CAAC,EAAE;KACd,CAA8B;EACjC;EAKAC,OAAO;IAELC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IAE/C,IAAIC,UAAU,GAAG,IAAI,CAACP,IAAI,CAACQ,KAAK;IAEhC;;;;;;;;;;;;;IAcA,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACH,UAAU,CAAC;EAChC;;AAlDWX,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAe;EAAAC;IAAAH;EAAA;EAAAI;EAAAC;EAAAC;EAAAC;IAAA;MCvBhCC,yBAAG;MAAAA,kCAAkB;MAAAA,iBAAI;MAIzBA,+BAAgD;MAAvBA;QAAA,OAAYC,aAAS;MAAA,EAAC;MAE7CD,2BAAK;MAEDA,sBACF;MAAAA,iBAAQ;MACRA,2BAAoD;MACtDA,iBAAM;MAENA,2BAAK;MAEDA,yBACF;MAAAA,iBAAQ;MACRA,4BAA0D;MAC5DA,iBAAM;MAENA,kCAAqC;MAAAA,yBAAQ;MAAAA,iBAAS;;;MAhBlDA,eAAkB;MAAlBA,oCAAkB","names":["EventEmitter","FormGroup","BookularService","CreateBookComponent","constructor","formBuilder","http","form","group","username","password","addBook","console","log","formObject","value","onSubmit","emit","selectors","outputs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\work\\traineeship\\Bookular\\Bookular\\ClientApp\\src\\app\\create-book\\create-book.component.ts","C:\\work\\traineeship\\Bookular\\Bookular\\ClientApp\\src\\app\\create-book\\create-book.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { BookularService } from '../../services/bookular.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { IBook } from '../home/IBook';\r\nimport { Observable } from 'rxjs';\r\n\n\ninterface IUserFormGroup extends FormGroup {\r\n  value: IBook;\r\n\r\n  // We need to add these manually again, same fields as IUser\r\n  controls: {\r\n    username: AbstractControl;\r\n    password: AbstractControl;\r\n  };\r\n}\n\n@Component({\n  selector: 'app-create-book',\n  templateUrl: './create-book.component.html',\n  styleUrls: ['./create-book.component.css']\n})\nexport class CreateBookComponent {\n  /*  @Output() onSubmit: EventEmitter<IBook> = new EventEmitter();*/\n\n\r\n  @Output() onSubmit = new EventEmitter<IBook>();\r\n\r\n  /*  checkoutForm = this.formBuilder.group({\r\n      title: '',\r\n      author: '',\r\n      description: ''\r\n    });*/\r\n\r\n  form: IUserFormGroup;\r\n\r\n  bookservice = new BookularService(this.http);\n  constructor(\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n\n  ) {\r\n    this.form = this.formBuilder.group({\r\n      username: [''],\r\n      password: ['']\r\n    }) as unknown as IUserFormGroup;\r\n  }\r\n\r\n\r\n\r\n\r\n  addBook(): void {\r\n\r\n    console.log(\"sdkfjsadfkjasndlfkasmndlfkasmdlf\");\r\n\r\n    var formObject = this.form.value;\r\n\r\n    /*   const newBook: IBook = {\r\n         id: 0,\r\n         title: (string)formObject.title,\r\n         description: \"Een nieuw boek om aan de lijst toe te voegen\",\r\n         author: {\r\n           id: 567,\r\n           firstName: 'Kees',\r\n           lastName: 'Test',\r\n           bio: 'Kees Test is een bijzondere auteur',\r\n           books: null\r\n         },\r\n         authorId: 567\r\n       };*/\r\n\r\n    this.onSubmit.emit(formObject);\r\n  }\n\n\n\n\n  /*\n    suggestionWasClicked(): void {\r\n  \r\n      const newBook: IBook = {\r\n        id: 101,\r\n        title: \"Een nieuw boek toegevoegd\",\r\n        description: \"Een nieuw boek om aan de lijst toe te voegen\",\r\n        author: {\r\n          id: 567,\r\n          firstName: 'Kees',\r\n          lastName: 'Test',\r\n          bio: 'Kees Test is een bijzondere auteur',\r\n          books: null\r\n        },\r\n        authorId: 567\r\n      };\r\n  \r\n      new this.onSubmit(newBook);\r\n    }*/\n\n  /*  onSubmit(): void {\r\n      // Process checkout data here\r\n      this.data = this.cartService.clearCart();\r\n      console.warn('Your order has been submitted', this.checkoutForm.value);\r\n      this.checkoutForm.reset();\r\n    }*/\n\n\n\n\n\n}\n","<p>create-book works!</p>\n\n\n\n<form [formGroup]=\"form\" (ngSubmit)=\"addBook()\">\n\n  <div>\n    <label for=\"name\">\n      Name\n    </label>\n    <input id=\"name\" type=\"text\" formControlName=\"name\">\n  </div>\n\n  <div>\n    <label for=\"address\">\n      Address\n    </label>\n    <input id=\"address\" type=\"text\" formControlName=\"address\">\n  </div>\n\n  <button class=\"button\" type=\"submit\">Purchase</button>\n\n</form>\n\n\n<!--<button (click)=\"addBook()\">Save</button>-->\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
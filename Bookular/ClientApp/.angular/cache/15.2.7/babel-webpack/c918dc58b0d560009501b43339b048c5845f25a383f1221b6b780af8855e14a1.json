{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class CounterComponent {\n  constructor() {\n    this.currentCount = 0;\n  }\n  incrementCounter() {\n    this.currentCount++;\n  }\n}\nCounterComponent.ɵfac = function CounterComponent_Factory(t) {\n  return new (t || CounterComponent)();\n};\nCounterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CounterComponent,\n  selectors: [[\"app-counter-component\"]],\n  decls: 17,\n  vars: 1,\n  consts: [[\"aria-live\", \"polite\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [\"id\", \"cursor\", \"src\", \"https://media.geeksforgeeks.org/wp-content/uploads/20200319212118/cursor2.png\", \"width\", \"15\", \"height\", \"20\"], [\"id\", \"b1\"], [\"id\", \"b2\"]],\n  template: function CounterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Counter\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"This is a simple example of an Angular component.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"p\", 0);\n      i0.ɵɵtext(5, \"Current count: \");\n      i0.ɵɵelementStart(6, \"strong\");\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function CounterComponent_Template_button_click_8_listener() {\n        return ctx.incrementCounter();\n      });\n      i0.ɵɵtext(9, \"Increment\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"img\", 2);\n      i0.ɵɵelementStart(11, \"p\")(12, \"button\", 3);\n      i0.ɵɵtext(13, \"BUTTON1\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"p\")(15, \"button\", 4);\n      i0.ɵɵtext(16, \"BUTTON2\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵtextInterpolate(ctx.currentCount);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,gBAAgB;EAJ7BC;IAKS,iBAAY,GAAG,CAAC;;EAEhBC,gBAAgB;IACrB,IAAI,CAACC,YAAY,EAAE;EACrB;;AALWH,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAI;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCN7BC,0BAAI;MAAAA,uBAAO;MAAAA,iBAAK;MAEhBA,yBAAG;MAAAA,iEAAiD;MAAAA,iBAAI;MAExDA,4BAAsB;MAAAA,+BAAe;MAAAA,8BAAQ;MAAAA,YAAkB;MAAAA,iBAAS;MAExEA,iCAA6D;MAA7BA;QAAA,OAASC,sBAAkB;MAAA,EAAC;MAACD,yBAAS;MAAAA,iBAAS;MAE/EA,0BAC8B;MAC9BA,0BAAG;MACeA,wBAAO;MAAAA,iBAAS;MAGlCA,0BAAG;MACeA,wBAAO;MAAAA,iBAAS;;;MAXWA,eAAkB;MAAlBA,sCAAkB","names":["CounterComponent","constructor","incrementCounter","currentCount","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\work\\traineeship\\Bookular\\Bookular\\ClientApp\\src\\app\\counter\\counter.component.ts","C:\\work\\traineeship\\Bookular\\Bookular\\ClientApp\\src\\app\\counter\\counter.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\nexport class CounterComponent {\r\n  public currentCount = 0;\r\n\r\n  public incrementCounter() {\r\n    this.currentCount++;\r\n  }\r\n}\r\n","<h1>Counter</h1>\r\n\r\n<p>This is a simple example of an Angular component.</p>\r\n\r\n<p aria-live=\"polite\">Current count: <strong>{{ currentCount }}</strong></p>\r\n\r\n<button class=\"btn btn-primary\" (click)=\"incrementCounter()\">Increment</button>\r\n\r\n<img id=\"cursor\" src=\"https://media.geeksforgeeks.org/wp-content/uploads/20200319212118/cursor2.png\"\r\n     width=\"15\" height=\"20\" />\r\n<p>\r\n  <button id=\"b1\">BUTTON1</button>\r\n</p>\r\n\r\n<p>\r\n  <button id=\"b2\">BUTTON2</button>\r\n</p>\r\n\r\n\r\n<script>\r\n  let x, y;\r\n  let px, py;\r\n  px = py = 0;\r\n\r\n  // Image of cursor\r\n  let cursor = document.getElementById(\"cursor\");\r\n\r\n  // Button 1\r\n  let b1 = document.getElementById(\"b1\");\r\n\r\n  // Button 2\r\n  let b2 = document.getElementById(\"b2\");\r\n\r\n  /* mutex is used to avoid multiple click event from\r\n  firing at the same time due to different position\r\n  of image cursor and actual cursor\r\n  Using mutex avoid any conflicts if original cursor and\r\n  image cursor are both on a clickable element\r\n  This makes sure only 1 click event is triggered at a time*/\r\n\r\n  let mutex = false;\r\n\r\n  /*\r\n  The following event is selecting the element\r\n  on the image cursor and fires click() on it.\r\n  The following event is triggered only when mouse is pressed.\r\n  */\r\n  window.addEventListener(\"mouseup\", function (e) {\r\n\r\n    // gets the object on image cursor position\r\n    let tmp = document.elementFromPoint(x + px, y + py);\r\n    mutex = true;\r\n    tmp.click();\r\n    cursor.style.left = (px + x) + \"px\";\r\n    cursor.style.top = (py + y) + \"px\";\r\n  })\r\n\r\n  /* The following event listener moves the image pointer\r\n  with respect to the actual mouse cursor\r\n  The function is triggered every time mouse is moved */\r\n  window.addEventListener(\"mousemove\", function (e) {\r\n\r\n    // Gets the x,y position of the mouse cursor\r\n    x = e.clientX;\r\n    y = e.clientY;\r\n\r\n    // sets the image cursor to new relative position\r\n    cursor.style.left = (px + x) + \"px\";\r\n    cursor.style.top = (py + y) + \"px\";\r\n\r\n  });\r\n\r\n  /* The following function re-calculates px,py\r\n  with respect to new position\r\n  Clicking on b1 moves the pointer to b2\r\n  Clicking on b2 moves the pointer to b1 */\r\n\r\n  b1.onclick = function () {\r\n    if (mutex) {\r\n      mutex = false;\r\n      px = b2.offsetLeft - x;\r\n      py = b2.offsetTop - y;\r\n    }\r\n  }\r\n\r\n  b2.onclick = function () {\r\n    if (mutex) {\r\n      mutex = false;\r\n      px = b1.offsetLeft - x;\r\n      py = b1.offsetTop - y;\r\n    }\r\n  }\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
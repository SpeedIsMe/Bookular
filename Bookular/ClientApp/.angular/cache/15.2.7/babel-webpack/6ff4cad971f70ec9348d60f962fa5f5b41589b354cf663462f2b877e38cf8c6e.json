{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { BookularService } from '../../services/bookular.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nexport class CreateBookComponent {\n  constructor(formBuilder, http) {\n    this.formBuilder = formBuilder;\n    this.http = http;\n    /*  @Output() onSubmit: EventEmitter<IBook> = new EventEmitter();*/\n    this.onSubmit = new EventEmitter();\n    this.checkoutForm = this.formBuilder.group({\n      title: '',\n      description: '',\n      authorFirstName: '',\n      authorLastName: '',\n      authorBio: ''\n    });\n    this.bookservice = new BookularService(this.http);\n  }\n  addBook() {\n    console.log(\"sdkfjsadfkjasndlfkasmndlfkasmdlf\");\n    var formObject = this.checkoutForm.value;\n    const newBook = {\n      id: 345345,\n      title: formObject.title,\n      description: formObject.description,\n      author: {\n        id: 567,\n        firstName: formObject.AuthorFirstName,\n        lastName: formObject.AuthorLastName,\n        bio: formObject.Bio,\n        books: null\n      },\n      authorId: 567\n    };\n    this.onSubmit.emit(newBook);\n  }\n}\nCreateBookComponent.ɵfac = function CreateBookComponent_Factory(t) {\n  return new (t || CreateBookComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient));\n};\nCreateBookComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateBookComponent,\n  selectors: [[\"app-create-book\"]],\n  outputs: {\n    onSubmit: \"onSubmit\"\n  },\n  decls: 13,\n  vars: 1,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"title\"], [\"id\", \"title\", \"type\", \"text\", \"formControlName\", \"title\"], [\"for\", \"description\"], [\"id\", \"description\", \"type\", \"text\", \"formControlName\", \"description\"], [\"type\", \"submit\", 1, \"button\"]],\n  template: function CreateBookComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"create-book works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateBookComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.addBook();\n      });\n      i0.ɵɵelementStart(3, \"div\")(4, \"label\", 1);\n      i0.ɵɵtext(5, \" Title \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\")(8, \"label\", 3);\n      i0.ɵɵtext(9, \" Description \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 5);\n      i0.ɵɵtext(12, \"Purchase\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.checkoutForm);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAAuB,eAAe;AAEtE,SAASC,eAAe,QAAQ,iCAAiC;;;;AAUjE,OAAM,MAAOC,mBAAmB;EAe9BC,YACUC,WAAwB,EACxBC,IAAgB;IADhB,gBAAW,GAAXD,WAAW;IACX,SAAI,GAAJC,IAAI;IAhBd;IAGU,aAAQ,GAAG,IAAIL,YAAY,EAAS;IAE9C,iBAAY,GAAG,IAAI,CAACI,WAAW,CAACE,KAAK,CAAC;MACpCC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,eAAe,EAAE,EAAE;MACnBC,cAAc,EAAE,EAAE;MAClBC,SAAS,EAAE;KACZ,CAAC;IAEF,gBAAW,GAAG,IAAIV,eAAe,CAAC,IAAI,CAACI,IAAI,CAAC;EAM5C;EAEAO,OAAO;IAELC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IAE/C,IAAIC,UAAU,GAAG,IAAI,CAACC,YAAY,CAACC,KAAK;IAExC,MAAMC,OAAO,GAAU;MACrBC,EAAE,EAAE,MAAM;MACVZ,KAAK,EAAEQ,UAAU,CAACR,KAAe;MACjCC,WAAW,EAAEO,UAAU,CAACP,WAAqB;MAC7CY,MAAM,EAAE;QACND,EAAE,EAAE,GAAG;QACPE,SAAS,EAAEN,UAAU,CAACO,eAAyB;QAC/CC,QAAQ,EAAER,UAAU,CAACS,cAAwB;QAC7CC,GAAG,EAAEV,UAAU,CAACW,GAAa;QAC7BC,KAAK,EAAE;OACR;MACDC,QAAQ,EAAE;KACX;IAED,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACZ,OAA2B,CAAC;EACjD;;AA3CWhB,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAA6B;EAAAC;IAAAH;EAAA;EAAAI;EAAAC;EAAAC;EAAAC;IAAA;MCZhCC,yBAAG;MAAAA,kCAAkB;MAAAA,iBAAI;MAIzBA,+BAAwD;MAAvBA;QAAA,OAAYC,aAAS;MAAA,EAAC;MAErDD,2BAAK;MAEDA,uBACF;MAAAA,iBAAQ;MACRA,2BAAsD;MACxDA,iBAAM;MAENA,2BAAK;MAEDA,6BACF;MAAAA,iBAAQ;MACRA,4BAAkE;MACpEA,iBAAM;MAENA,kCAAqC;MAAAA,yBAAQ;MAAAA,iBAAS;;;MAhBlDA,eAA0B;MAA1BA,4CAA0B","names":["EventEmitter","BookularService","CreateBookComponent","constructor","formBuilder","http","group","title","description","authorFirstName","authorLastName","authorBio","addBook","console","log","formObject","checkoutForm","value","newBook","id","author","firstName","AuthorFirstName","lastName","AuthorLastName","bio","Bio","books","authorId","onSubmit","emit","selectors","outputs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\work\\traineeship\\Bookular\\Bookular\\ClientApp\\src\\app\\create-book\\create-book.component.ts","C:\\work\\traineeship\\Bookular\\Bookular\\ClientApp\\src\\app\\create-book\\create-book.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { BookularService } from '../../services/bookular.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { IBook } from '../home/IBook';\r\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-create-book',\n  templateUrl: './create-book.component.html',\n  styleUrls: ['./create-book.component.css']\n})\nexport class CreateBookComponent {\n  /*  @Output() onSubmit: EventEmitter<IBook> = new EventEmitter();*/\n\n\r\n  @Output() onSubmit = new EventEmitter<IBook>();\r\n\r\n  checkoutForm = this.formBuilder.group({\r\n    title: '',\r\n    description: '',\r\n    authorFirstName: '',\r\n    authorLastName: '',\r\n    authorBio: ''\r\n  });\r\n\r\n  bookservice = new BookularService(this.http);\n  constructor(\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n\n  ) {\r\n  }\r\n\r\n  addBook(): void {\r\n\r\n    console.log(\"sdkfjsadfkjasndlfkasmndlfkasmdlf\");\r\n\r\n    var formObject = this.checkoutForm.value;\r\n\r\n    const newBook: IBook = {\r\n      id: 345345,\r\n      title: formObject.title as string,\r\n      description: formObject.description as string,\r\n      author: {\r\n        id: 567,\r\n        firstName: formObject.AuthorFirstName as string,\r\n        lastName: formObject.AuthorLastName as string,\r\n        bio: formObject.Bio as string,\r\n        books: null\r\n      },\r\n      authorId: 567\r\n    };\r\n\r\n    this.onSubmit.emit(newBook as unknown as IBook);\r\n  }\n\n\n\n\n  /*\n    suggestionWasClicked(): void {\r\n  \r\n      const newBook: IBook = {\r\n        id: 101,\r\n        title: \"Een nieuw boek toegevoegd\",\r\n        description: \"Een nieuw boek om aan de lijst toe te voegen\",\r\n        author: {\r\n          id: 567,\r\n          firstName: 'Kees',\r\n          lastName: 'Test',\r\n          bio: 'Kees Test is een bijzondere auteur',\r\n          books: null\r\n        },\r\n        authorId: 567\r\n      };\r\n  \r\n      new this.onSubmit(newBook);\r\n    }*/\n\n  /*  onSubmit(): void {\r\n      // Process checkout data here\r\n      this.data = this.cartService.clearCart();\r\n      console.warn('Your order has been submitted', this.checkoutForm.value);\r\n      this.checkoutForm.reset();\r\n    }*/\n\n\n\n\n\n}\n","<p>create-book works!</p>\n\n\n\n<form [formGroup]=\"checkoutForm\" (ngSubmit)=\"addBook()\">\n\n  <div>\n    <label for=\"title\">\n      Title\n    </label>\n    <input id=\"title\" type=\"text\" formControlName=\"title\">\n  </div>\n\n  <div>\n    <label for=\"description\">\n      Description\n    </label>\n    <input id=\"description\" type=\"text\" formControlName=\"description\">\n  </div>\n\n  <button class=\"button\" type=\"submit\">Purchase</button>\n\n</form>\n\n\n<!--<button (click)=\"addBook()\">Save</button>-->\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}